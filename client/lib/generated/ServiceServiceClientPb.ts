/**
 * @fileoverview gRPC-Web generated client stub for paperproto_server
 * @enhanceable
 * @public
 */

// Code generated by protoc-gen-grpc-web. DO NOT EDIT.
// versions:
// 	protoc-gen-grpc-web v1.5.0
// 	protoc              v3.19.1
// source: service.proto


/* eslint-disable */
// @ts-nocheck


import * as grpcWeb from 'grpc-web';

import * as service_pb from './service_pb'; // proto import: "service.proto"


export class PaperProtoServerClient {
  client_: grpcWeb.AbstractClientBase;
  hostname_: string;
  credentials_: null | { [index: string]: string; };
  options_: null | { [index: string]: any; };

  constructor (hostname: string,
               credentials?: null | { [index: string]: string; },
               options?: null | { [index: string]: any; }) {
    if (!options) options = {};
    if (!credentials) credentials = {};
    options['format'] = 'text';

    this.client_ = new grpcWeb.GrpcWebClientBase(options);
    this.hostname_ = hostname.replace(/\/+$/, '');
    this.credentials_ = credentials;
    this.options_ = options;
  }

  methodDescriptorLaunchGameRoom = new grpcWeb.MethodDescriptor(
    '/paperproto_server.PaperProtoServer/LaunchGameRoom',
    grpcWeb.MethodType.UNARY,
    service_pb.LaunchGameRoomRequest,
    service_pb.LaunchGameRoomResponse,
    (request: service_pb.LaunchGameRoomRequest) => {
      return request.serializeBinary();
    },
    service_pb.LaunchGameRoomResponse.deserializeBinary
  );

  launchGameRoom(
    request: service_pb.LaunchGameRoomRequest,
    metadata?: grpcWeb.Metadata | null): Promise<service_pb.LaunchGameRoomResponse>;

  launchGameRoom(
    request: service_pb.LaunchGameRoomRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: service_pb.LaunchGameRoomResponse) => void): grpcWeb.ClientReadableStream<service_pb.LaunchGameRoomResponse>;

  launchGameRoom(
    request: service_pb.LaunchGameRoomRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: service_pb.LaunchGameRoomResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/paperproto_server.PaperProtoServer/LaunchGameRoom',
        request,
        metadata || {},
        this.methodDescriptorLaunchGameRoom,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/paperproto_server.PaperProtoServer/LaunchGameRoom',
    request,
    metadata || {},
    this.methodDescriptorLaunchGameRoom);
  }

  methodDescriptorJoinGameRoom = new grpcWeb.MethodDescriptor(
    '/paperproto_server.PaperProtoServer/JoinGameRoom',
    grpcWeb.MethodType.UNARY,
    service_pb.JoinGameRoomRequest,
    service_pb.JoinGameRoomResponse,
    (request: service_pb.JoinGameRoomRequest) => {
      return request.serializeBinary();
    },
    service_pb.JoinGameRoomResponse.deserializeBinary
  );

  joinGameRoom(
    request: service_pb.JoinGameRoomRequest,
    metadata?: grpcWeb.Metadata | null): Promise<service_pb.JoinGameRoomResponse>;

  joinGameRoom(
    request: service_pb.JoinGameRoomRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: service_pb.JoinGameRoomResponse) => void): grpcWeb.ClientReadableStream<service_pb.JoinGameRoomResponse>;

  joinGameRoom(
    request: service_pb.JoinGameRoomRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: service_pb.JoinGameRoomResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/paperproto_server.PaperProtoServer/JoinGameRoom',
        request,
        metadata || {},
        this.methodDescriptorJoinGameRoom,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/paperproto_server.PaperProtoServer/JoinGameRoom',
    request,
    metadata || {},
    this.methodDescriptorJoinGameRoom);
  }

  methodDescriptorGetPlayers = new grpcWeb.MethodDescriptor(
    '/paperproto_server.PaperProtoServer/GetPlayers',
    grpcWeb.MethodType.SERVER_STREAMING,
    service_pb.GetPlayersRequest,
    service_pb.GetPlayersResponse,
    (request: service_pb.GetPlayersRequest) => {
      return request.serializeBinary();
    },
    service_pb.GetPlayersResponse.deserializeBinary
  );

  getPlayers(
    request: service_pb.GetPlayersRequest,
    metadata?: grpcWeb.Metadata): grpcWeb.ClientReadableStream<service_pb.GetPlayersResponse> {
    return this.client_.serverStreaming(
      this.hostname_ +
        '/paperproto_server.PaperProtoServer/GetPlayers',
      request,
      metadata || {},
      this.methodDescriptorGetPlayers);
  }

  methodDescriptorSubscribeToGameUpdates = new grpcWeb.MethodDescriptor(
    '/paperproto_server.PaperProtoServer/SubscribeToGameUpdates',
    grpcWeb.MethodType.SERVER_STREAMING,
    service_pb.SubscribeToGameUpdatesRequest,
    service_pb.SubscribeToGameUpdatesResponse,
    (request: service_pb.SubscribeToGameUpdatesRequest) => {
      return request.serializeBinary();
    },
    service_pb.SubscribeToGameUpdatesResponse.deserializeBinary
  );

  subscribeToGameUpdates(
    request: service_pb.SubscribeToGameUpdatesRequest,
    metadata?: grpcWeb.Metadata): grpcWeb.ClientReadableStream<service_pb.SubscribeToGameUpdatesResponse> {
    return this.client_.serverStreaming(
      this.hostname_ +
        '/paperproto_server.PaperProtoServer/SubscribeToGameUpdates',
      request,
      metadata || {},
      this.methodDescriptorSubscribeToGameUpdates);
  }

  methodDescriptorSendGameUpdate = new grpcWeb.MethodDescriptor(
    '/paperproto_server.PaperProtoServer/SendGameUpdate',
    grpcWeb.MethodType.UNARY,
    service_pb.SendGameUpdateRequest,
    service_pb.SendGameUpdateResponse,
    (request: service_pb.SendGameUpdateRequest) => {
      return request.serializeBinary();
    },
    service_pb.SendGameUpdateResponse.deserializeBinary
  );

  sendGameUpdate(
    request: service_pb.SendGameUpdateRequest,
    metadata?: grpcWeb.Metadata | null): Promise<service_pb.SendGameUpdateResponse>;

  sendGameUpdate(
    request: service_pb.SendGameUpdateRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: service_pb.SendGameUpdateResponse) => void): grpcWeb.ClientReadableStream<service_pb.SendGameUpdateResponse>;

  sendGameUpdate(
    request: service_pb.SendGameUpdateRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: service_pb.SendGameUpdateResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/paperproto_server.PaperProtoServer/SendGameUpdate',
        request,
        metadata || {},
        this.methodDescriptorSendGameUpdate,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/paperproto_server.PaperProtoServer/SendGameUpdate',
    request,
    metadata || {},
    this.methodDescriptorSendGameUpdate);
  }

  methodDescriptorGameEnd = new grpcWeb.MethodDescriptor(
    '/paperproto_server.PaperProtoServer/GameEnd',
    grpcWeb.MethodType.UNARY,
    service_pb.GameEndRequest,
    service_pb.GameEndResponse,
    (request: service_pb.GameEndRequest) => {
      return request.serializeBinary();
    },
    service_pb.GameEndResponse.deserializeBinary
  );

  gameEnd(
    request: service_pb.GameEndRequest,
    metadata?: grpcWeb.Metadata | null): Promise<service_pb.GameEndResponse>;

  gameEnd(
    request: service_pb.GameEndRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: service_pb.GameEndResponse) => void): grpcWeb.ClientReadableStream<service_pb.GameEndResponse>;

  gameEnd(
    request: service_pb.GameEndRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: service_pb.GameEndResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/paperproto_server.PaperProtoServer/GameEnd',
        request,
        metadata || {},
        this.methodDescriptorGameEnd,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/paperproto_server.PaperProtoServer/GameEnd',
    request,
    metadata || {},
    this.methodDescriptorGameEnd);
  }

  methodDescriptorHeartbeat = new grpcWeb.MethodDescriptor(
    '/paperproto_server.PaperProtoServer/Heartbeat',
    grpcWeb.MethodType.UNARY,
    service_pb.HeartbeatRequest,
    service_pb.HeartbeatResponse,
    (request: service_pb.HeartbeatRequest) => {
      return request.serializeBinary();
    },
    service_pb.HeartbeatResponse.deserializeBinary
  );

  heartbeat(
    request: service_pb.HeartbeatRequest,
    metadata?: grpcWeb.Metadata | null): Promise<service_pb.HeartbeatResponse>;

  heartbeat(
    request: service_pb.HeartbeatRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: service_pb.HeartbeatResponse) => void): grpcWeb.ClientReadableStream<service_pb.HeartbeatResponse>;

  heartbeat(
    request: service_pb.HeartbeatRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: service_pb.HeartbeatResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/paperproto_server.PaperProtoServer/Heartbeat',
        request,
        metadata || {},
        this.methodDescriptorHeartbeat,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/paperproto_server.PaperProtoServer/Heartbeat',
    request,
    metadata || {},
    this.methodDescriptorHeartbeat);
  }

}

