static_resources:
  listeners:
  - name: listener_0
    address:
      socket_address: { address: 0.0.0.0, port_value: 8080 }
    filter_chains:
    - filters:
      - name: envoy.filters.network.http_connection_manager
        typed_config:
          "@type": type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager
          codec_type: auto
          stat_prefix: ingress_http
          route_config:
            name: local_route
            virtual_hosts:
            - name: local_service
              domains: ["*"]
              routes:
              - match: { prefix: "/" }
                route:
                  cluster: paperproto_service
                  timeout: 0s
              cors:
                allow_origin_string_match:
                - prefix: "*"
                allow_methods: GET, PUT, DELETE, POST, OPTIONS
                allow_headers: keep-alive,user-agent,cache-control,content-type,content-transfer-encoding,x-accept-content-transfer-encoding,x-accept-response-streaming,x-user-agent,x-grpc-web,grpc-timeout
                max_age: "1728000"
                expose_headers: grpc-status,grpc-message
          http_filters:
          - name: envoy.filters.http.grpc_web
            typed_config:
              "@type": type.googleapis.com/envoy.extensions.filters.http.grpc_web.v3.GrpcWeb
          - name: envoy.filters.http.cors
            typed_config:
              "@type": type.googleapis.com/envoy.extensions.filters.http.cors.v3.Cors
          - name: envoy.filters.http.router
            typed_config:
              "@type": type.googleapis.com/envoy.extensions.filters.http.router.v3.Router
  clusters:
  - name: paperproto_service
    connect_timeout: 0.25s
    type: logical_dns
    http2_protocol_options: {}
    lb_policy: round_robin
    load_assignment:
      cluster_name: paperproto_service
      endpoints:
      - lb_endpoints:
        - endpoint:
            address:
              socket_address:
                address: your_ip_address # For local development, update this IP to be the matching IP as the server.
                port_value: 5001 


# Note to ourselves: uncomment this if you are editing the server in AWS.
# The above code allows us to run locally.

# static_resources:
#   listeners:
#     - name: listener_https
#       address:
#         socket_address: { address: 0.0.0.0, port_value: 443 }
#       filter_chains:
#         - filters:
#             - name: envoy.filters.network.http_connection_manager
#               typed_config:
#                 "@type": type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager
#                 codec_type: auto
#                 stat_prefix: ingress_https
#                 route_config:
#                   name: local_route
#                   virtual_hosts:
#                     - name: local_service
#                       domains: ["*"]
#                       routes:
#                         - match: { prefix: "/" }
#                           route:
#                             cluster: paperproto_service
#                             timeout: 0s
#                       cors:
#                         allow_origin_string_match:
#                           - prefix: "*"
#                         allow_methods: GET, PUT, DELETE, POST, OPTIONS
#                         allow_headers: keep-alive,user-agent,cache-control,content-type,content-transfer-encoding,x-accept-content-transfer-encoding,x-accept-response-streaming,x-user-agent,x-grpc-web,grpc-timeout
#                         max_age: "1728000"
#                         expose_headers: grpc-status,grpc-message
#                 http_filters:
#                   - name: envoy.filters.http.grpc_web
#                     typed_config:
#                       "@type": type.googleapis.com/envoy.extensions.filters.http.grpc_web.v3.GrpcWeb
#                   - name: envoy.filters.http.cors
#                     typed_config:
#                       "@type": type.googleapis.com/envoy.extensions.filters.http.cors.v3.Cors
#                   - name: envoy.filters.http.router
#                     typed_config:
#                       "@type": type.googleapis.com/envoy.extensions.filters.http.router.v3.Router
#           transport_socket:
#             name: envoy.transport_sockets.tls
#             typed_config:
#               "@type": type.googleapis.com/envoy.extensions.transport_sockets.tls.v3.DownstreamTlsContext
#               common_tls_context:
#                 tls_certificates:
#                   - certificate_chain:
#                       filename: "/etc/letsencrypt/live/proxy.paper-proto.com/fullchain.pem"
#                     private_key:
#                       filename: "/etc/letsencrypt/live/proxy.paper-proto.com/privkey.pem"
              
#   clusters:
#     - name: paperproto_service
#       connect_timeout: 0.25s
#       type: logical_dns
#       http2_protocol_options: {}
#       lb_policy: round_robin
#       load_assignment:
#         cluster_name: paperproto_service
#         endpoints:
#           - lb_endpoints:
#               - endpoint:
#                   address:
#                     socket_address:
#                       address: host.docker.internal
#                       port_value: 5001
